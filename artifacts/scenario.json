[
  {
    "shortname": "contractContract",
    "longname": "contractContract",
    "scenario": [
      {
        "action": "newContract",
        "accept_unknown_types": false,
        "export": "(template_id ((\"\" -1) static_id 0) \nstorage ((\"contracts/transfer_contract.py\" 10) record (admin ((\"contracts/transfer_contract.py\" 11) set ((\"contracts/transfer_contract.py\" 11) literal (address \"tz1RTt21hfc9rndKcQTS1CeF5rzr8bJ5nhV5\")))) (dataTransferMap ((\"contracts/transfer_contract.py\" 11) type_annotation ((\"contracts/transfer_contract.py\" 11) map ) (map \"nat\" (record ((assetId \"string\") (consumerId \"string\") (contractRef \"address\") (producerId \"string\") (timestamp \"timestamp\")) None (\"contracts/transfer_contract.py\" 3))))))\nstorage_type (())\nentry_points ((deleteDataTransfer True None None None True None (\"contracts/transfer_contract.py\" 29) (((\"contracts/transfer_contract.py\" 31) verify ((\"contracts/transfer_contract.py\" 31) contains ((\"contracts/transfer_contract.py\" 31) attr ((\"\" -1) data) \"admin\") ((\"\" -1) source)) ((\"contracts/transfer_contract.py\" 31) literal (string \"No permission to write to smart contract.\"))) ((\"contracts/transfer_contract.py\" 34) verify ((\"contracts/transfer_contract.py\" 34) contains ((\"contracts/transfer_contract.py\" 34) attr ((\"\" -1) data) \"dataTransferMap\") ((\"contracts/transfer_contract.py\" 29) params))) ((\"contracts/transfer_contract.py\" 36) del_item ((\"contracts/transfer_contract.py\" 34) attr ((\"\" -1) data) \"dataTransferMap\") ((\"contracts/transfer_contract.py\" 29) params)))) (getDataTransfer True None None None True None (\"contracts/transfer_contract.py\" 24) (((\"contracts/transfer_contract.py\" 26) verify ((\"contracts/transfer_contract.py\" 26) contains ((\"contracts/transfer_contract.py\" 34) attr ((\"\" -1) data) \"dataTransferMap\") ((\"contracts/transfer_contract.py\" 24) params))))) (postDataTransfer True None None None True None (\"contracts/transfer_contract.py\" 15) (((\"contracts/transfer_contract.py\" 17) verify ((\"contracts/transfer_contract.py\" 17) not ((\"contracts/transfer_contract.py\" 17) contains ((\"contracts/transfer_contract.py\" 34) attr ((\"\" -1) data) \"dataTransferMap\") ((\"\" -1) attr ((\"contracts/transfer_contract.py\" 15) params) \"transactionId\"))) ((\"contracts/transfer_contract.py\" 17) literal (string \"TransactionId already used.\"))) ((\"contracts/transfer_contract.py\" 20) set ((\"contracts/transfer_contract.py\" 20) get_item ((\"contracts/transfer_contract.py\" 34) attr ((\"\" -1) data) \"dataTransferMap\") ((\"\" -1) attr ((\"contracts/transfer_contract.py\" 15) params) \"transactionId\")) ((\"contracts/transfer_contract.py\" 20) record (assetId ((\"\" -1) attr ((\"contracts/transfer_contract.py\" 15) params) \"assetId\")) (consumerId ((\"\" -1) attr ((\"contracts/transfer_contract.py\" 15) params) \"consumerId\")) (contractRef ((\"\" -1) attr ((\"contracts/transfer_contract.py\" 15) params) \"contractRef\")) (producerId ((\"\" -1) attr ((\"contracts/transfer_contract.py\" 15) params) \"producerId\")) (timestamp ((\"\" -1) now)))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
        "id": "((\"\" -1) static_id 0)",
        "export": "(template_id ((\"\" -1) static_id 0) \nstorage ((\"contracts/asset_contract.py\" 17) record (administrator ((\"contracts/asset_contract.py\" 45) literal (address \"tz1Na21NimuuPXcQdHUk2en2XWYe9McyDDgZ\"))) (author ((\"contracts/asset_contract.py\" 17) literal (string \"Johann Hartmann\"))) (last_token_id ((\"//smartpy.io/templates/fa2_lib.py\" 342) literal (nat 0))) (ledger ((\"//smartpy.io/templates/fa2_lib.py\" 340) type_annotation ((\"//smartpy.io/templates/fa2_lib.py\" 340) big_map ) (bigmap \"nat\" \"address\"))) (metadata ((\"//smartpy.io/templates/fa2_lib.py\" 341) type_annotation ((\"contracts/asset_contract.py\" 45) big_map (((\"\" -1) literal (string \"\")) ((\"contracts/asset_contract.py\" 45) literal (bytes \"0x68747470733a2f2f697066732e696f2f697066732f516d556d55714643526a6354416b506753667375556d64735750524e444a6d454332737762465842363233723678\")))) (bigmap \"string\" \"bytes\"))) (token_metadata ((\"//smartpy.io/templates/fa2_lib.py\" 183) type_annotation ((\"//smartpy.io/templates/fa2_lib.py\" 183) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) (Some ((\"token_id\") (\"token_info\"))) (\"//smartpy.io/templates/fa2_lib.py\" 186))))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"//smartpy.io/templates/fa2_lib.py\" 258) (((\"//smartpy.io/templates/fa2_lib.py\" 264) set_type ((\"//smartpy.io/templates/fa2_lib.py\" 258) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"//smartpy.io/templates/fa2_lib.py\" 39)))) (Some ((\"request\") (\"balance\"))) (\"//smartpy.io/templates/fa2_lib.py\" 43))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"//smartpy.io/templates/fa2_lib.py\" 39))))) (Some ((\"requests\") (\"callback\"))) (\"//smartpy.io/templates/fa2_lib.py\" 47))) ((\"//smartpy.io/templates/fa2_lib.py\" 226) set_type ((\"//smartpy.io/templates/fa2_lib.py\" 266) attr ((\"//smartpy.io/templates/fa2_lib.py\" 258) params) \"requests\") (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"//smartpy.io/templates/fa2_lib.py\" 39)))) ((\"//smartpy.io/templates/fa2_lib.py\" 265) set ((\"//smartpy.io/templates/fa2_lib.py\" 265) operations) ((\"//smartpy.io/templates/fa2_lib.py\" 265) cons ((\"//smartpy.io/templates/fa2_lib.py\" 265) transfer ((\"//smartpy.io/templates/fa2_lib.py\" 236) map_function ((\"//smartpy.io/templates/fa2_lib.py\" 266) attr ((\"//smartpy.io/templates/fa2_lib.py\" 258) params) \"requests\") ((\"//smartpy.io/templates/fa2_lib.py\" 236) lambda_general None False None \"_x0\" \"\" (((\"//smartpy.io/templates/fa2_lib.py\" 369) verify ((\"//smartpy.io/templates/fa2_lib.py\" 195) contains ((\"//smartpy.io/templates/fa2_lib.py\" 195) attr ((\"\" -1) data) \"token_metadata\") ((\"//smartpy.io/templates/fa2_lib.py\" 232) attr ((\"//smartpy.io/templates/fa2_lib.py\" 236) lambda_params \"_x0\") \"token_id\")) ((\"//smartpy.io/templates/fa2_lib.py\" 369) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"//smartpy.io/templates/fa2_lib.py\" 229) result ((\"//smartpy.io/templates/fa2_lib.py\" 230) record (balance ((\"//smartpy.io/templates/fa2_lib.py\" 370) eif ((\"//smartpy.io/templates/fa2_lib.py\" 370) eq ((\"//smartpy.io/templates/fa2_lib.py\" 370) get_item ((\"//smartpy.io/templates/fa2_lib.py\" 370) attr ((\"\" -1) data) \"ledger\") ((\"//smartpy.io/templates/fa2_lib.py\" 232) attr ((\"//smartpy.io/templates/fa2_lib.py\" 236) lambda_params \"_x0\") \"token_id\")) ((\"//smartpy.io/templates/fa2_lib.py\" 232) attr ((\"//smartpy.io/templates/fa2_lib.py\" 236) lambda_params \"_x0\") \"owner\")) ((\"//smartpy.io/templates/fa2_lib.py\" 370) literal (intOrNat 1)) ((\"//smartpy.io/templates/fa2_lib.py\" 370) literal (intOrNat 0)))) (request ((\"//smartpy.io/templates/fa2_lib.py\" 236) lambda_params \"_x0\"))))))) ((\"//smartpy.io/templates/fa2_lib.py\" 266) literal (mutez 0)) ((\"//smartpy.io/templates/fa2_lib.py\" 266) attr ((\"//smartpy.io/templates/fa2_lib.py\" 258) params) \"callback\")) ((\"//smartpy.io/templates/fa2_lib.py\" 265) operations))))) (mint True None None None True None (\"contracts/asset_contract.py\" 23) (((\"contracts/asset_contract.py\" 24) set_type ((\"contracts/asset_contract.py\" 23) params) (list (record ((metadata (map \"string\" \"bytes\")) (to_ \"address\")) (Some ((\"to_\") (\"metadata\"))) (\"contracts/asset_contract.py\" 27)))) ((\"contracts/asset_contract.py\" 34) for_group \"action\" ((\"contracts/asset_contract.py\" 23) params) (((\"contracts/asset_contract.py\" 35) define_local \"compute_asset_contract_35\" ((\"contracts/asset_contract.py\" 35) attr ((\"\" -1) data) \"last_token_id\") True) ((\"contracts/asset_contract.py\" 37) set ((\"contracts/asset_contract.py\" 37) get_item ((\"//smartpy.io/templates/fa2_lib.py\" 195) attr ((\"\" -1) data) \"token_metadata\") ((\"contracts/asset_contract.py\" 35) get_local \"compute_asset_contract_35\")) ((\"contracts/asset_contract.py\" 36) record (token_id ((\"contracts/asset_contract.py\" 35) get_local \"compute_asset_contract_35\")) (token_info ((\"contracts/asset_contract.py\" 36) attr ((\"contracts/asset_contract.py\" 34) iter \"action\") \"metadata\")))) ((\"contracts/asset_contract.py\" 38) set ((\"contracts/asset_contract.py\" 38) get_item ((\"//smartpy.io/templates/fa2_lib.py\" 370) attr ((\"\" -1) data) \"ledger\") ((\"contracts/asset_contract.py\" 35) get_local \"compute_asset_contract_35\")) ((\"contracts/asset_contract.py\" 38) attr ((\"contracts/asset_contract.py\" 34) iter \"action\") \"to_\")) ((\"contracts/asset_contract.py\" 39) set ((\"contracts/asset_contract.py\" 35) attr ((\"\" -1) data) \"last_token_id\") ((\"contracts/asset_contract.py\" 39) add ((\"contracts/asset_contract.py\" 35) attr ((\"\" -1) data) \"last_token_id\") ((\"contracts/asset_contract.py\" 39) literal (intOrNat 1)))))))) (set_administrator True None None None True None (\"//smartpy.io/templates/fa2_lib.py\" 516) (((\"//smartpy.io/templates/fa2_lib.py\" 518) verify ((\"//smartpy.io/templates/fa2_lib.py\" 513) eq ((\"\" -1) sender) ((\"//smartpy.io/templates/fa2_lib.py\" 513) attr ((\"\" -1) data) \"administrator\")) ((\"//smartpy.io/templates/fa2_lib.py\" 518) literal (string \"FA2_NOT_ADMIN\"))) ((\"//smartpy.io/templates/fa2_lib.py\" 519) set ((\"//smartpy.io/templates/fa2_lib.py\" 513) attr ((\"\" -1) data) \"administrator\") ((\"//smartpy.io/templates/fa2_lib.py\" 516) params)))) (transfer True None None None True None (\"//smartpy.io/templates/fa2_lib.py\" 270) (((\"//smartpy.io/templates/fa2_lib.py\" 276) set_type ((\"//smartpy.io/templates/fa2_lib.py\" 270) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"//smartpy.io/templates/fa2_lib.py\" 29))))) (Some ((\"from_\") (\"txs\"))) (\"//smartpy.io/templates/fa2_lib.py\" 26)))) ((\"//smartpy.io/templates/fa2_lib.py\" 288) failwith ((\"//smartpy.io/templates/fa2_lib.py\" 288) literal (string \"FA2_TX_DENIED\"))))) (update_operators True None None None True None (\"//smartpy.io/templates/fa2_lib.py\" 241) (((\"//smartpy.io/templates/fa2_lib.py\" 244) set_type ((\"//smartpy.io/templates/fa2_lib.py\" 241) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"//smartpy.io/templates/fa2_lib.py\" 16))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"//smartpy.io/templates/fa2_lib.py\" 16)))) None (\"//smartpy.io/templates/fa2_lib.py\" 21)))) ((\"//smartpy.io/templates/fa2_lib.py\" 255) failwith ((\"//smartpy.io/templates/fa2_lib.py\" 255) literal (string \"FA2_OPERATORS_UNSUPPORTED\"))))))\nflags ()\nprivates ()\nviews ((offchain all_tokens False (\"//smartpy.io/templates/fa2_lib.py\" 293) True \"OffchainView: Return the list of all the token IDs known to the contract.\" (((\"//smartpy.io/templates/fa2_lib.py\" 295) result ((\"//smartpy.io/templates/fa2_lib.py\" 295) range ((\"//smartpy.io/templates/fa2_lib.py\" 295) literal (intOrNat 0)) ((\"//smartpy.io/templates/fa2_lib.py\" 295) attr ((\"\" -1) data) \"last_token_id\") ((\"//smartpy.io/templates/fa2_lib.py\" 295) literal (intOrNat 1)))))) (offchain get_balance True (\"//smartpy.io/templates/fa2_lib.py\" 305) True \"Return the balance of an address for the specified `token_id`.\" (((\"//smartpy.io/templates/fa2_lib.py\" 307) set_type ((\"//smartpy.io/templates/fa2_lib.py\" 305) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"//smartpy.io/templates/fa2_lib.py\" 309))) ((\"//smartpy.io/templates/fa2_lib.py\" 369) verify ((\"//smartpy.io/templates/fa2_lib.py\" 195) contains ((\"//smartpy.io/templates/fa2_lib.py\" 195) attr ((\"\" -1) data) \"token_metadata\") ((\"//smartpy.io/templates/fa2_lib.py\" 313) attr ((\"//smartpy.io/templates/fa2_lib.py\" 305) params) \"token_id\")) ((\"//smartpy.io/templates/fa2_lib.py\" 369) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"//smartpy.io/templates/fa2_lib.py\" 313) result ((\"//smartpy.io/templates/fa2_lib.py\" 370) eif ((\"//smartpy.io/templates/fa2_lib.py\" 370) eq ((\"//smartpy.io/templates/fa2_lib.py\" 370) get_item ((\"//smartpy.io/templates/fa2_lib.py\" 370) attr ((\"\" -1) data) \"ledger\") ((\"//smartpy.io/templates/fa2_lib.py\" 313) attr ((\"//smartpy.io/templates/fa2_lib.py\" 305) params) \"token_id\")) ((\"//smartpy.io/templates/fa2_lib.py\" 313) attr ((\"//smartpy.io/templates/fa2_lib.py\" 305) params) \"owner\")) ((\"//smartpy.io/templates/fa2_lib.py\" 370) literal (intOrNat 1)) ((\"//smartpy.io/templates/fa2_lib.py\" 370) literal (intOrNat 0)))))) (offchain is_operator True (\"//smartpy.io/templates/fa2_lib.py\" 298) True \"Return whether `operator` is allowed to transfer `token_id` tokens\\n        owned by `owner`.\" (((\"//smartpy.io/templates/fa2_lib.py\" 301) set_type ((\"//smartpy.io/templates/fa2_lib.py\" 298) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"//smartpy.io/templates/fa2_lib.py\" 16))) ((\"//smartpy.io/templates/fa2_lib.py\" 302) result ((\"//smartpy.io/templates/fa2_lib.py\" 302) literal (bool False))))) (offchain total_supply True (\"//smartpy.io/templates/fa2_lib.py\" 316) True \"Return the total number of tokens for the given `token_id`.\" (((\"//smartpy.io/templates/fa2_lib.py\" 318) verify ((\"//smartpy.io/templates/fa2_lib.py\" 195) contains ((\"//smartpy.io/templates/fa2_lib.py\" 195) attr ((\"\" -1) data) \"token_metadata\") ((\"//smartpy.io/templates/fa2_lib.py\" 318) attr ((\"//smartpy.io/templates/fa2_lib.py\" 316) params) \"token_id\")) ((\"//smartpy.io/templates/fa2_lib.py\" 318) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"//smartpy.io/templates/fa2_lib.py\" 373) verify ((\"//smartpy.io/templates/fa2_lib.py\" 195) contains ((\"//smartpy.io/templates/fa2_lib.py\" 195) attr ((\"\" -1) data) \"token_metadata\") ((\"//smartpy.io/templates/fa2_lib.py\" 318) attr ((\"//smartpy.io/templates/fa2_lib.py\" 316) params) \"token_id\")) ((\"//smartpy.io/templates/fa2_lib.py\" 373) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"//smartpy.io/templates/fa2_lib.py\" 319) result ((\"//smartpy.io/templates/fa2_lib.py\" 319) type_annotation ((\"//smartpy.io/templates/fa2_lib.py\" 374) literal (nat 1)) \"nat\")))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"//smartpy.io/templates/fa2_lib.py\" 222) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"name\")) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"gaia.tub.assets\")))) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"version\")) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"1.0.0\")))) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"description\")) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"NFT contract for ipfs asset management\")))) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"interfaces\")) (meta_list (\"//smartpy.io/templates/fa2_lib.py\" 222) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"TZIP-012\"))) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"TZIP-016\"))))) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"authors\")) (meta_list (\"//smartpy.io/templates/fa2_lib.py\" 222) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"Technische Universit\u00e4t Berlin\"))) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"Information Systems Engineering\"))) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"Johann Hartmann\"))))) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"homepage\")) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"https://www.ise.tu-berlin.de/menue/projekte/\")))) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"source\")) (meta_map (\"//smartpy.io/templates/fa2_lib.py\" 222) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"tools\")) (meta_list (\"//smartpy.io/templates/fa2_lib.py\" 222) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"SmartPy\"))))) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"location\")) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"https://gitlab.com/SmartPy/smartpy/-/raw/master/python/templates/FA2.py\")))))) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"permissions\")) (meta_map (\"//smartpy.io/templates/fa2_lib.py\" 222) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"receiver\")) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"owner-no-hook\")))) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"sender\")) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"owner-no-hook\")))) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"operator\")) (meta_expr ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"no-transfer\")))))) (elem ((\"//smartpy.io/templates/fa2_lib.py\" 222) literal (string \"views\")) (meta_list (\"//smartpy.io/templates/fa2_lib.py\" 222) (meta_view \"all_tokens\" (\"//smartpy.io/templates/fa2_lib.py\" 293)) (meta_view \"get_balance\" (\"//smartpy.io/templates/fa2_lib.py\" 305)) (meta_view \"is_operator\" (\"//smartpy.io/templates/fa2_lib.py\" 298)) (meta_view \"total_supply\" (\"//smartpy.io/templates/fa2_lib.py\" 316)))))))\nbalance ())",
        "id": "((\"\" -1) static_id 0)",
        "line_no": "(\"\" -1)",
        "show": true
      }
    ],
    "kind": "compilation"
  }
]